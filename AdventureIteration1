from sys import exit

namesake = ()								# empty TUPLE that will contain username
keys_dict = {}								# found keys assigned here
											# remember, "key": value
												# add new dict entries with keys_dict['key'] = value_here

#a function you call if you want the player to die and program to end.	
def dead(reason):
	# the function takes a single argument, reason, which is what you call dead() with as a parameter.
		# dead("bears") would return the below message, stating bears had killed you.
	print "Looks like ", reason, " killed you.\nProgram End.\n~*~*~*~*~*~*~*~*~*~"
	exit()

def long_hallway():
	print "You enter a long hallway.\nYou can see three doors from here."
	print "1. Red Door\n2. Blue Door\n3. Open Door\n"
	while True:
		choice = raw_input("Now what?\n>> ")
		if choice is "1" and "RedKey" not in keys_dict:
			print "The red door has a red lock on it. Looks like you need a KEY...\n"
		elif choice is "1" and "RedKey" in keys_dict:
			print "The red lock falls to the ground!"
			raw_input("PRESS ENTER TO CONTINUE\n")
			# cat_room()
		

def bathroom1():
	print "You're not sure what you expected. It's a small bathroom for guests."
	print "There's just a small sink here. Some hand towels...\nA glorious toilet, a RED KEY, and a few magazines."
	print "Maybe you should GO BACK."
	while True:
		choice = raw_input("Now what?\n>> ")
		if choice == "go back":
			print "Going back to the lobby..."
			room_one()
		elif choice == "red key":
			print "you picked up the red key!"
			keys_dict["RedKey"] = 1
		else:
			print "I didn't understand. Try again."
		
def room_one():
	print "You are in the lobby of a large mansion."
	print "There are two paths:\n1. Hallway\n2. Small door\nType the number of your choice."
	while True:
		choice = raw_input(">> ")
		if choice is "1":
			print "You are going to head down the hallway now..."
			raw_input("PRESS ENTER TO CONTINUE\n")
			long_hallway()
		elif choice is "2":
			print "You prepare to open the small door..."
			raw_input("PRESS ENTER TO CONTINUE\n")
			bathroom1()

			
def start():
	print "The game is starting.\n"
	# The empty namesake dict is 
	namesake = raw_input("What is your Name?\n>> ")
	print "Hello, %s." % namesake
	print "Let's put you into the mansion."
	room_one()

start()										# The program starts here. 
###											# Don't define new things past this line.

# A game with a branching path system.
# There is a goal.
# Follow the illustration in ex35me_Room_Layout.png file
# Some branches in the path are inaccessible until "keys" are picked up
	# keys will be stored in a single dict
	# use the "in" operator on the dict to check if a specific key exists
	# if so, then you can pass through to these blocked rooms.
	
